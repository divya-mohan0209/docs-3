"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[126],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(h,l(l({ref:n},d),{},{components:t})):r.createElement(h,l({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8916:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),l=["components"],i={title:"Disable Components Flags",weight:60},s=void 0,c={unversionedId:"installation/disable-flags",id:"installation/disable-flags",title:"Disable Components Flags",description:"Starting the K3s server with --cluster-init will run all control plane components, including the api server, controller manager, scheduler, and etcd. However, you can run server nodes with certain components and exclude others; the following sections will explain how to do that.",source:"@site/docs/installation/disable-flags.md",sourceDirName:"installation",slug:"/installation/disable-flags",permalink:"/installation/disable-flags",draft:!1,editUrl:"https://github.com/k3s-io/k3s/docs/edit/main/docs/installation/disable-flags.md",tags:[],version:"current",lastUpdatedAt:1657220395,formattedLastUpdatedAt:"7/7/2022",frontMatter:{title:"Disable Components Flags",weight:60},sidebar:"mySidebar",previous:{title:"Air-Gap Install",permalink:"/installation/airgap"},next:{title:"Kubernetes Dashboard",permalink:"/installation/kube-dashboard"}},d={},p=[{value:"Re-enabling control components",id:"re-enabling-control-components",level:3}],u={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Starting the K3s server with ",(0,a.kt)("inlineCode",{parentName:"p"},"--cluster-init")," will run all control plane components, including the api server, controller manager, scheduler, and etcd. However, you can run server nodes with certain components and exclude others; the following sections will explain how to do that."),(0,a.kt)("h1",{id:"etcd-only-nodes"},"ETCD Only Nodes"),(0,a.kt)("p",null,"This document assumes you run K3s server with embedded etcd by passing ",(0,a.kt)("inlineCode",{parentName:"p"},"--cluster-init")," flag to the server process."),(0,a.kt)("p",null,"To run a K3s server with only etcd components you can pass ",(0,a.kt)("inlineCode",{parentName:"p"},"--disable-apiserver --disable-controller-manager --disable-scheduler")," flags to k3s, this will result in running a server node with only etcd, for example to run K3s server with those flags:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -fL https://get.k3s.io | sh -s - server --cluster-init --disable-apiserver --disable-controller-manager --disable-scheduler\n")),(0,a.kt)("p",null,"You can join other nodes to the cluster normally after that."),(0,a.kt)("h1",{id:"disable-etcd"},"Disable ETCD"),(0,a.kt)("p",null,"You can also disable etcd from a server node and this will result in a k3s server running control components other than etcd, that can be accomplished by running k3s server with flag ",(0,a.kt)("inlineCode",{parentName:"p"},"--disable-etcd")," for example to join another node with only control components to the etcd node created in the previous section:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -fL https://get.k3s.io | sh -s - server --token <token> --disable-etcd --server https://<etcd-only-node>:6443 \n")),(0,a.kt)("p",null,"The end result will be a two nodes one of them is etcd only node and the other one is controlplane only node, if you check the node list you should see something like the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl get nodes\nNAME              STATUS   ROLES                       AGE     VERSION\nip-172-31-13-32   Ready    etcd                        5h39m   v1.20.4+k3s1\nip-172-31-14-69   Ready    control-plane,master        5h39m   v1.20.4+k3s1\n")),(0,a.kt)("p",null,"Note that you can run ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," commands only on the k3s server that has the api running, and you can't run ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," commands on etcd only nodes."),(0,a.kt)("h3",{id:"re-enabling-control-components"},"Re-enabling control components"),(0,a.kt)("p",null,"In both cases you can re-enable any component that you already disabled simply by removing the corresponding flag that disables them, so for example if you want to revert the etcd only node back to a full k3s server with all components you can just remove the following 3 flags ",(0,a.kt)("inlineCode",{parentName:"p"},"--disable-apiserver --disable-controller-manager --disable-scheduler"),", so in our example to revert back node ",(0,a.kt)("inlineCode",{parentName:"p"},"ip-172-31-13-32")," to a full k3s server you can just re-run the curl command without the disable flags:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -fL https://get.k3s.io | sh -s - server --cluster-init\n")),(0,a.kt)("p",null,"you will notice that all components started again and you can run kubectl commands again:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl get nodes\nNAME              STATUS   ROLES                       AGE     VERSION\nip-172-31-13-32   Ready    control-plane,etcd,master   5h45m   v1.20.4+k3s1\nip-172-31-14-69   Ready    control-plane,master        5h45m   v1.20.4+k3s1\n")),(0,a.kt)("p",null,"Notice that role labels has been re-added to the node ",(0,a.kt)("inlineCode",{parentName:"p"},"ip-172-31-13-32")," with the correct labels (control-plane,etcd,master)."),(0,a.kt)("h1",{id:"add-disable-flags-using-the-config-file"},"Add disable flags using the config file"),(0,a.kt)("p",null,"In any of the previous situations you can use the config file instead of running the curl commands with the associated flags, for example to run an etcd only node you can add the following options to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/rancher/k3s/config.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"---\ndisable-apiserver: true\ndisable-controller-manager: true\ndisable-scheduler: true\ncluster-init: true\n")),(0,a.kt)("p",null,"and then start K3s using the curl command without any arguents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -fL https://get.k3s.io | sh -\n")),(0,a.kt)("h1",{id:"disable-components-using-skip-files"},"Disable components using .skip files"),(0,a.kt)("p",null,"For any yaml file under ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/server/manifests")," (coredns, traefik, local-storeage, etc.) you can add a ",(0,a.kt)("inlineCode",{parentName:"p"},".skip")," file which will cause K3s to not apply the associated yaml file.\nFor example, adding ",(0,a.kt)("inlineCode",{parentName:"p"},"traefik.yaml.skip")," in the manifests directory will cause K3s to skip ",(0,a.kt)("inlineCode",{parentName:"p"},"traefik.yaml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ls /var/lib/rancher/k3s/server/manifests\nccm.yaml      local-storage.yaml  rolebindings.yaml  traefik.yaml.skip\ncoredns.yaml  traefik.yaml\n\nkubectl get pods -A\nNAMESPACE     NAME                                     READY   STATUS    RESTARTS   AGE\nkube-system   local-path-provisioner-64ffb68fd-xx98j   1/1     Running   0          74s\nkube-system   metrics-server-5489f84d5d-7zwkt          1/1     Running   0          74s\nkube-system   coredns-85cb69466-vcq7j                  1/1     Running   0          74s\n")))}m.isMDXComponent=!0}}]);