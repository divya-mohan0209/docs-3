"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[353],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(6010),i="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7462),r=n(7294),i=n(6010),o=n(2389),l=n(7392),s=n(7094),p=n(2466),u="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,o=e.lazy,d=e.block,m=e.defaultValue,k=e.values,h=e.groupId,f=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=k?k:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,S=N.setTabGroupChoices,x=(0,r.useState)(y),E=x[0],T=x[1],C=[],_=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var O=w[h];null!=O&&O!==E&&b.some((function(e){return e.value===O}))&&T(O)}var R=function(e){var t=e.currentTarget,n=C.indexOf(t),a=b[n].value;a!==E&&(_(t),T(a),null!=h&&S(h,String(a)))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=C.indexOf(e.currentTarget)+1;n=null!=(a=C[r])?a:C[0];break;case"ArrowLeft":var i,o=C.indexOf(e.currentTarget)-1;n=null!=(i=C[o])?i:C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},f)},b.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return C.push(e)},onKeyDown:A,onFocus:R,onClick:R},o,{className:(0,i.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":E===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function m(e){var t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},3115:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(5488),l=n(5162),s=["components"],p={title:"Advanced Options and Configuration",weight:45,aliases:["/k3s/latest/en/running/","/k3s/latest/en/configuration/"]},u=void 0,c={unversionedId:"advanced/advanced",id:"advanced/advanced",title:"Advanced Options and Configuration",description:"This section contains advanced information describing the different ways you can run and manage K3s:",source:"@site/docs/advanced/advanced.md",sourceDirName:"advanced",slug:"/advanced/",permalink:"/advanced/",draft:!1,editUrl:"https://github.com/k3s-io/k3s/docs/edit/main/docs/advanced/advanced.md",tags:[],version:"current",lastUpdatedAt:1657220395,formattedLastUpdatedAt:"7/7/2022",frontMatter:{title:"Advanced Options and Configuration",weight:45,aliases:["/k3s/latest/en/running/","/k3s/latest/en/configuration/"]},sidebar:"mySidebar",previous:{title:"Helm",permalink:"/helm/"},next:{title:"FAQ",permalink:"/faq/"}},d={},m=[{value:"Certificate Rotation",id:"certificate-rotation",level:3},{value:"Auto-Deploying Manifests",id:"auto-deploying-manifests",level:3},{value:"Using Docker as the Container Runtime",id:"using-docker-as-the-container-runtime",level:3},{value:"Optional: Use crictl with Docker",id:"optional-use-crictl-with-docker",level:4},{value:"Known Issues with Rootless mode",id:"known-issues-with-rootless-mode",level:3},{value:"Running Servers and Agents with Rootless",id:"running-servers-and-agents-with-rootless",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Additional preparation for (Red Hat/CentOS) Enterprise Linux",id:"additional-preparation-for-red-hatcentos-enterprise-linux",level:3},{value:"Additional preparation for Raspberry Pi OS Setup",id:"additional-preparation-for-raspberry-pi-os-setup",level:3},{value:"Enabling legacy iptables on Raspberry Pi OS",id:"enabling-legacy-iptables-on-raspberry-pi-os",level:4},{value:"Enabling cgroups for Raspberry Pi OS",id:"enabling-cgroups-for-raspberry-pi-os",level:3},{value:"Enabling vxlan on Ubuntu 21.10+ on Raspberry Pi",id:"enabling-vxlan-on-ubuntu-2110-on-raspberry-pi",level:3},{value:"Running K3d (K3s in Docker) and docker-compose",id:"running-k3d-k3s-in-docker-and-docker-compose",level:3},{value:"example of /boot/cmdline.txt",id:"example-of-bootcmdlinetxt",level:4},{value:"SELinux Support",id:"selinux-support",level:3},{value:"Automatic Installation",id:"automatic-installation",level:4},{value:"Manual Installation",id:"manual-installation",level:4},{value:"Enabling and Disabling SELinux Enforcement",id:"enabling-and-disabling-selinux-enforcement",level:4},{value:"Enabling Lazy Pulling of eStargz (Experimental)",id:"enabling-lazy-pulling-of-estargz-experimental",level:3},{value:"What&#39;s lazy pulling and eStargz?",id:"whats-lazy-pulling-and-estargz",level:4},{value:"Configure k3s for lazy pulling of eStargz",id:"configure-k3s-for-lazy-pulling-of-estargz",level:4},{value:"Additional Logging Sources",id:"additional-logging-sources",level:3},{value:"Server and agent tokens",id:"server-and-agent-tokens",level:3}],k={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This section contains advanced information describing the different ways you can run and manage K3s:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#certificate-rotation"},"Certificate rotation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#auto-deploying-manifests"},"Auto-deploying manifests")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-docker-as-the-container-runtime"},"Using Docker as the container runtime")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-etcdctl"},"Using etcdctl")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-containerd"},"Configuring containerd")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#running-k3s-with-rootless-mode-experimental"},"Running K3s with Rootless mode (Experimental)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#node-labels-and-taints"},"Node labels and taints")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#starting-the-server-with-the-installation-script"},"Starting the server with the installation script")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#additional-preparation-for-alpine-linux-setup"},"Additional preparation for Alpine Linux setup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#additional-preparation-for-red-hat/centos-enterprise-linux"},"Additional preparation for (Red Hat/CentOS) Enterprise Linux")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#additional-preparation-for-raspberry-pi-os-setup"},"Additional preparation for Raspberry Pi OS Setup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#enabling-vxlan-on-ubuntu-21.10+-on-raspberry-pi"},"Enabling vxlan on Ubuntu 21.10+ on Raspberry Pi")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#running-k3d-k3s-in-docker-and-docker-compose"},"Running K3d (K3s in Docker) and docker-compose")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#selinux-support"},"SELinux Support")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#enabling-lazy-pulling-of-estargz-experimental"},"Enabling Lazy Pulling of eStargz (Experimental)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#additional-logging-sources"},"Additional Logging Sources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#server-and-agent-tokens"},"Server and agent tokens"))),(0,i.kt)("h3",{id:"certificate-rotation"},"Certificate Rotation"),(0,i.kt)("p",null,"By default, certificates in K3s expire in 12 months."),(0,i.kt)("p",null,"If the certificates are expired or have fewer than 90 days remaining before they expire, the certificates are rotated when K3s is restarted."),(0,i.kt)("h3",{id:"auto-deploying-manifests"},"Auto-Deploying Manifests"),(0,i.kt)("p",null,"Any file found in ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/server/manifests")," will automatically be deployed to Kubernetes in a manner similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply"),", both on startup and when the file is changed on disk. Deleting files out of this directory will not delete the corresponding resources from the cluster."),(0,i.kt)("p",null,"For information about deploying Helm charts, refer to the section about ",(0,i.kt)("a",{parentName:"p",href:"../helm"},"Helm.")),(0,i.kt)("h3",{id:"using-docker-as-the-container-runtime"},"Using Docker as the Container Runtime"),(0,i.kt)("p",null,"K3s includes and defaults to ",(0,i.kt)("a",{parentName:"p",href:"https://containerd.io/"},"containerd,")," an industry-standard container runtime."),(0,i.kt)("p",null,"To use Docker instead of containerd,"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install Docker on the K3s node. One of Rancher's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rancher/install-docker"},"Docker installation scripts")," can be used to install Docker:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"curl https://releases.rancher.com/install-docker/19.03.sh | sh\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install K3s using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--docker")," option:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"curl -sfL https://get.k3s.io | sh -s - --docker\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Confirm that the cluster is available:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"$ sudo k3s kubectl get pods --all-namespaces\nNAMESPACE     NAME                                     READY   STATUS      RESTARTS   AGE\nkube-system   local-path-provisioner-6d59f47c7-lncxn   1/1     Running     0          51s\nkube-system   metrics-server-7566d596c8-9tnck          1/1     Running     0          51s\nkube-system   helm-install-traefik-mbkn9               0/1     Completed   1          51s\nkube-system   coredns-8655855d6-rtbnb                  1/1     Running     0          51s\nkube-system   svclb-traefik-jbmvl                      2/2     Running     0          43s\nkube-system   traefik-758cd5fc85-2wz97                 1/1     Running     0          43s\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Confirm that the Docker containers are running:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'$ sudo docker ps\nCONTAINER ID        IMAGE                     COMMAND                  CREATED              STATUS              PORTS               NAMES\n3e4d34729602        897ce3c5fc8f              "entry"                  About a minute ago   Up About a minute                       k8s_lb-port-443_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\nbffdc9d7a65f        rancher/klipper-lb        "entry"                  About a minute ago   Up About a minute                       k8s_lb-port-80_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\n436b85c5e38d        rancher/library-traefik   "/traefik --configfi\u2026"   About a minute ago   Up About a minute                       k8s_traefik_traefik-758cd5fc85-2wz97_kube-system_07abe831-ffd6-4206-bfa1-7c9ca4fb39e7_0\nde8fded06188        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\n7c6a30aeeb2f        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_traefik-758cd5fc85-2wz97_kube-system_07abe831-ffd6-4206-bfa1-7c9ca4fb39e7_0\nae6c58cab4a7        9d12f9848b99              "local-path-provisio\u2026"   About a minute ago   Up About a minute                       k8s_local-path-provisioner_local-path-provisioner-6d59f47c7-lncxn_kube-system_2dbd22bf-6ad9-4bea-a73d-620c90a6c1c1_0\nbe1450e1a11e        9dd718864ce6              "/metrics-server"        About a minute ago   Up About a minute                       k8s_metrics-server_metrics-server-7566d596c8-9tnck_kube-system_031e74b5-e9ef-47ef-a88d-fbf3f726cbc6_0\n4454d14e4d3f        c4d3d16fe508              "/coredns -conf /etc\u2026"   About a minute ago   Up About a minute                       k8s_coredns_coredns-8655855d6-rtbnb_kube-system_d05725df-4fb1-410a-8e82-2b1c8278a6a1_0\nc3675b87f96c        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_coredns-8655855d6-rtbnb_kube-system_d05725df-4fb1-410a-8e82-2b1c8278a6a1_0\n4b1fddbe6ca6        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_local-path-provisioner-6d59f47c7-lncxn_kube-system_2dbd22bf-6ad9-4bea-a73d-620c90a6c1c1_0\n64d3517d4a95        rancher/pause:3.1         "/pause"\n')))),(0,i.kt)("h4",{id:"optional-use-crictl-with-docker"},"Optional: Use crictl with Docker"),(0,i.kt)("p",null,"crictl provides a CLI for CRI-compatible container runtimes."),(0,i.kt)("p",null,"If you would like to use crictl after installing K3s with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--docker")," option, install crictl using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/cri-tools/blob/master/docs/crictl.md"},"official documentation:")," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ VERSION="v1.17.0"\n$ curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-${VERSION}-linux-amd64.tar.gz --output crictl-${VERSION}-linux-amd64.tar.gz\n$ sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin\ncrictl\n')),(0,i.kt)("p",null,"Then start using crictl commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo crictl version\nVersion:  0.1.0\nRuntimeName:  docker\nRuntimeVersion:  19.03.9\nRuntimeApiVersion:  1.40.0\n$ sudo crictl images\nIMAGE                            TAG                 IMAGE ID            SIZE\nrancher/coredns-coredns          1.6.3               c4d3d16fe508b       44.3MB\nrancher/klipper-helm             v0.2.5              6207e2a3f5225       136MB\nrancher/klipper-lb               v0.1.2              897ce3c5fc8ff       6.1MB\nrancher/library-traefik          1.7.19              aa764f7db3051       85.7MB\nrancher/local-path-provisioner   v0.0.11             9d12f9848b99f       36.2MB\nrancher/metrics-server           v0.3.6              9dd718864ce61       39.9MB\nrancher/pause                    3.1                 da86e6ba6ca19       742kB\n")),(0,i.kt)("h1",{id:"using-etcdctl"},"Using etcdctl"),(0,i.kt)("p",null,"etcdctl provides a CLI for etcd."),(0,i.kt)("p",null,"If you would like to use etcdctl after installing K3s with embedded etcd, install etcdctl using the ",(0,i.kt)("a",{parentName:"p",href:"https://etcd.io/docs/latest/install/"},"official documentation.")," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ VERSION="v3.5.0"\n$ curl -L https://github.com/etcd-io/etcd/releases/download/${VERSION}/etcd-${VERSION}-linux-amd64.tar.gz --output etcdctl-linux-amd64.tar.gz\n$ sudo tar -zxvf etcdctl-linux-amd64.tar.gz --strip-components=1 -C /usr/local/bin etcd-${VERSION}-linux-amd64/etcdctl\n')),(0,i.kt)("p",null,"Then start using etcdctl commands with the appropriate K3s flags:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo etcdctl --cacert=/var/lib/rancher/k3s/server/tls/etcd/server-ca.crt --cert=/var/lib/rancher/k3s/server/tls/etcd/client.crt --key=/var/lib/rancher/k3s/server/tls/etcd/client.key version\n")),(0,i.kt)("h1",{id:"configuring-containerd"},"Configuring containerd"),(0,i.kt)("p",null,"K3s will generate config.toml for containerd in ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/agent/etc/containerd/config.toml"),"."),(0,i.kt)("p",null,"For advanced customization for this file you can create another file called ",(0,i.kt)("inlineCode",{parentName:"p"},"config.toml.tmpl")," in the same directory and it will be used instead."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"config.toml.tmpl")," will be treated as a Go template file, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"config.Node")," structure is being passed to the template. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/blob/master/pkg/agent/templates"},"this folder")," for Linux and Windows examples on how to use the structure to customize the configuration file."),(0,i.kt)("h1",{id:"running-k3s-with-rootless-mode-experimental"},"Running K3s with Rootless mode (Experimental)"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Warning:")," This feature is experimental.")),(0,i.kt)("p",null,"Rootless mode allows running the entire k3s an unprivileged user, so as to protect the real root on the host from potential container-breakout attacks."),(0,i.kt)("p",null,"See also ",(0,i.kt)("a",{parentName:"p",href:"https://rootlesscontaine.rs/"},"https://rootlesscontaine.rs/")," to learn about Rootless mode."),(0,i.kt)("h3",{id:"known-issues-with-rootless-mode"},"Known Issues with Rootless mode"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Ports")),(0,i.kt)("p",{parentName:"li"},"  When running rootless a new network namespace is created.  This means that K3s instance is running with networking fairly detached from the host.  The only way to access services run in K3s from the host is to set up port forwards to the K3s network namespace. We have a controller that will automatically bind 6443 and service port below 1024 to the host with an offset of 10000. "),(0,i.kt)("p",{parentName:"li"},"  That means service port 80 will become 10080 on the host, but 8080 will become 8080 without any offset."),(0,i.kt)("p",{parentName:"li"},"  Currently, only ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadBalancer")," services are automatically bound.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Cgroups")),(0,i.kt)("p",{parentName:"li"},"  Cgroup v1 is not supported. v2 is supported.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Multi-node cluster")),(0,i.kt)("p",{parentName:"li"},"  Multi-cluster installation is untested and undocumented."))),(0,i.kt)("h3",{id:"running-servers-and-agents-with-rootless"},"Running Servers and Agents with Rootless"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Enable cgroup v2 delegation, see ",(0,i.kt)("a",{parentName:"p",href:"https://rootlesscontaine.rs/getting-started/common/cgroup2/"},"https://rootlesscontaine.rs/getting-started/common/cgroup2/")," .\nThis step is optional, but highly recommended for enabling CPU and memory resource limtitation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Download ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/blob/master/k3s-rootless.service"},(0,i.kt)("inlineCode",{parentName:"a"},"https://github.com/k3s-io/k3s/blob/<VERSION>/k3s-rootless.service")),".\nMake sure to use the same version of ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Install ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/systemd/user/k3s-rootless.service"),".\nInstalling this file as a system-wide service (",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/systemd/..."),") is not supported.\nDepending on the path of ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s")," binary, you might need to modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"ExecStart=/usr/local/bin/k3s ...")," line of the file.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"systemctl --user daemon-reload"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"systemctl --user enable --now k3s-rootless"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"KUBECONFIG=~/.kube/k3s.yaml kubectl get pods -A"),", and make sure the pods are running."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")," Don't try to run ",(0,i.kt)("inlineCode",{parentName:"p"},"k3s server --rootless")," on a terminal, as it doesn't enable cgroup v2 delegation.\nIf you really need to try it on a terminal, prepend ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd-run --user -p Delegate=yes --tty")," to create a systemd scope."),(0,i.kt)("p",{parentName:"blockquote"},"i.e., ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd-run --user -p Delegate=yes --tty k3s server --rootless"))),(0,i.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"systemctl --user status k3s-rootless")," to check the daemon status"),(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"journalctl --user -f -u k3s-rootless")," to see the daemon log"),(0,i.kt)("li",{parentName:"ul"},"See also ",(0,i.kt)("a",{parentName:"li",href:"https://rootlesscontaine.rs/"},"https://rootlesscontaine.rs/"))),(0,i.kt)("h1",{id:"node-labels-and-taints"},"Node Labels and Taints"),(0,i.kt)("p",null,"K3s agents can be configured with the options ",(0,i.kt)("inlineCode",{parentName:"p"},"--node-label")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--node-taint")," which adds a label and taint to the kubelet. The two options only add labels and/or taints ",(0,i.kt)("a",{parentName:"p",href:"/installation/install-options/agent-config#node-labels-and-taints-for-agents"},"at registration time,")," so they can only be added once and not changed after that again by running K3s commands."),(0,i.kt)("p",null,"If you want to change node labels and taints after node registration you should use ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl"),". Refer to the official Kubernetes documentation for details on how to add ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"},"taints")," and ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/#add-a-label-to-a-node"},"node labels.")),(0,i.kt)("h1",{id:"starting-the-server-with-the-installation-script"},"Starting the Server with the Installation Script"),(0,i.kt)("p",null,"The installation script will auto-detect if your OS is using systemd or openrc and start the service.\nWhen running with openrc, logs will be created at ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/log/k3s.log"),". "),(0,i.kt)("p",null,"When running with systemd, logs will be created in ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/log/syslog")," and viewed using ",(0,i.kt)("inlineCode",{parentName:"p"},"journalctl -u k3s"),"."),(0,i.kt)("p",null,"An example of installing and auto-starting with the install script:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sfL https://get.k3s.io | sh -\n")),(0,i.kt)("p",null,"When running the server manually you should get an output similar to the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ k3s server\nINFO[2019-01-22T15:16:19.908493986-07:00] Starting k3s dev                             \nINFO[2019-01-22T15:16:19.908934479-07:00] Running kube-apiserver --allow-privileged=true --authorization-mode Node,RBAC --service-account-signing-key-file /var/lib/rancher/k3s/server/tls/service.key --service-cluster-ip-range 10.43.0.0/16 --advertise-port 6445 --advertise-address 127.0.0.1 --insecure-port 0 --secure-port 6444 --bind-address 127.0.0.1 --tls-cert-file /var/lib/rancher/k3s/server/tls/localhost.crt --tls-private-key-file /var/lib/rancher/k3s/server/tls/localhost.key --service-account-key-file /var/lib/rancher/k3s/server/tls/service.key --service-account-issuer k3s --api-audiences unknown --basic-auth-file /var/lib/rancher/k3s/server/cred/passwd --kubelet-client-certificate /var/lib/rancher/k3s/server/tls/token-node.crt --kubelet-client-key /var/lib/rancher/k3s/server/tls/token-node.key \nFlag --insecure-port has been deprecated, This flag will be removed in a future version.\nINFO[2019-01-22T15:16:20.196766005-07:00] Running kube-scheduler --kubeconfig /var/lib/rancher/k3s/server/cred/kubeconfig-system.yaml --port 0 --secure-port 0 --leader-elect=false\nINFO[2019-01-22T15:16:20.196880841-07:00] Running kube-controller-manager --kubeconfig /var/lib/rancher/k3s/server/cred/kubeconfig-system.yaml --service-account-private-key-file /var/lib/rancher/k3s/server/tls/service.key --allocate-node-cidrs --cluster-cidr 10.42.0.0/16 --root-ca-file /var/lib/rancher/k3s/server/tls/token-ca.crt --port 0 --secure-port 0 --leader-elect=false \nFlag --port has been deprecated, see --secure-port instead.\nINFO[2019-01-22T15:16:20.273441984-07:00] Listening on :6443                           \nINFO[2019-01-22T15:16:20.278383446-07:00] Writing manifest: /var/lib/rancher/k3s/server/manifests/coredns.yaml \nINFO[2019-01-22T15:16:20.474454524-07:00] Node token is available at /var/lib/rancher/k3s/server/node-token \nINFO[2019-01-22T15:16:20.474471391-07:00] To join node to cluster: k3s agent -s https://10.20.0.3:6443 -t ${NODE_TOKEN} \nINFO[2019-01-22T15:16:20.541027133-07:00] Wrote kubeconfig /etc/rancher/k3s/k3s.yaml\nINFO[2019-01-22T15:16:20.541049100-07:00] Run: k3s kubectl                             \n")),(0,i.kt)("p",null,"The output will likely be much longer as the agent will create a lot of logs. By default the server\nwill register itself as a node (run the agent)."),(0,i.kt)("h1",{id:"additional-preparation-for-alpine-linux-setup"},"Additional Preparation for Alpine Linux Setup"),(0,i.kt)("p",null,"In order to set up Alpine Linux, you have to go through the following preparation:"),(0,i.kt)("p",null,"Update ",(0,i.kt)("strong",{parentName:"p"},"/etc/update-extlinux.conf")," by adding:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'default_kernel_opts="...  cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory"\n')),(0,i.kt)("p",null,"Then update the config and reboot:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"update-extlinux\nreboot\n")),(0,i.kt)("h3",{id:"additional-preparation-for-red-hatcentos-enterprise-linux"},"Additional preparation for (Red Hat/CentOS) Enterprise Linux"),(0,i.kt)("p",null,"It is recommended to turn off firewalld:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"systemctl disable firewalld --now\n")),(0,i.kt)("p",null,"If enabled, it is required to disable nm-cloud-setup and reboot the node:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"systemctl disable nm-cloud-setup.service nm-cloud-setup.timer\nreboot\n")),(0,i.kt)("h3",{id:"additional-preparation-for-raspberry-pi-os-setup"},"Additional preparation for Raspberry Pi OS Setup"),(0,i.kt)("h4",{id:"enabling-legacy-iptables-on-raspberry-pi-os"},"Enabling legacy iptables on Raspberry Pi OS"),(0,i.kt)("p",null,"Raspberry Pi OS (formerly Raspbian) defaults to using ",(0,i.kt)("inlineCode",{parentName:"p"},"nftables")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"iptables"),".  ",(0,i.kt)("strong",{parentName:"p"},"K3S")," networking features require ",(0,i.kt)("inlineCode",{parentName:"p"},"iptables")," and do not work with ",(0,i.kt)("inlineCode",{parentName:"p"},"nftables"),".  Follow the steps below to switch configure ",(0,i.kt)("strong",{parentName:"p"},"Buster")," to use ",(0,i.kt)("inlineCode",{parentName:"p"},"legacy iptables"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo iptables -F\nsudo update-alternatives --set iptables /usr/sbin/iptables-legacy\nsudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\nsudo reboot\n")),(0,i.kt)("h3",{id:"enabling-cgroups-for-raspberry-pi-os"},"Enabling cgroups for Raspberry Pi OS"),(0,i.kt)("p",null,"Standard Raspberry Pi OS installations do not start with ",(0,i.kt)("inlineCode",{parentName:"p"},"cgroups")," enabled. ",(0,i.kt)("strong",{parentName:"p"},"K3S")," needs ",(0,i.kt)("inlineCode",{parentName:"p"},"cgroups")," to start the systemd service. ",(0,i.kt)("inlineCode",{parentName:"p"},"cgroups"),"can be enabled by appending ",(0,i.kt)("inlineCode",{parentName:"p"},"cgroup_memory=1 cgroup_enable=memory")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"/boot/cmdline.txt"),"."),(0,i.kt)("h3",{id:"enabling-vxlan-on-ubuntu-2110-on-raspberry-pi"},"Enabling vxlan on Ubuntu 21.10+ on Raspberry Pi"),(0,i.kt)("p",null,"Starting with Ubuntu 21.10, vxlan support on Raspberry Pi has been moved into a seperate kernel module. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt install linux-modules-extra-raspi\n")),(0,i.kt)("h3",{id:"running-k3d-k3s-in-docker-and-docker-compose"},"Running K3d (K3s in Docker) and docker-compose"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rancher/k3d"},"k3d")," is a utility designed to easily run K3s in Docker."),(0,i.kt)("p",null,"It can be installed via the the ",(0,i.kt)("a",{parentName:"p",href:"https://brew.sh/"},"brew")," utility on MacOS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"brew install k3d\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rancher/k3s")," images are also available to run the K3s server and agent from Docker. "),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," is in the root of the K3s repo that serves as an example of how to run K3s from Docker. To run from ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," from this repo, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker-compose up --scale agent=3\n# kubeconfig is written to current dir\n\nkubectl --kubeconfig kubeconfig.yaml get node\n\nNAME           STATUS   ROLES    AGE   VERSION\n497278a2d6a2   Ready    <none>   11s   v1.13.2-k3s2\nd54c8b17c055   Ready    <none>   11s   v1.13.2-k3s2\ndb7a5a5a5bdd   Ready    <none>   12s   v1.13.2-k3s2\n")),(0,i.kt)("p",null,"To run the agent only in Docker, use ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose up agent"),"."),(0,i.kt)("p",null,"Alternatively the ",(0,i.kt)("inlineCode",{parentName:"p"},"docker run")," command can also be used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo docker run \\\n  -d --tmpfs /run \\\n  --tmpfs /var/run \\\n  -e K3S_URL=${SERVER_URL} \\\n  -e K3S_TOKEN=${NODE_TOKEN} \\\n  --privileged rancher/k3s:vX.Y.Z\n")),(0,i.kt)("h4",{id:"example-of-bootcmdlinetxt"},"example of /boot/cmdline.txt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"console=serial0,115200 console=tty1 root=PARTUUID=58b06195-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait cgroup_memory=1 cgroup_enable=memory\n")),(0,i.kt)("h3",{id:"selinux-support"},"SELinux Support"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Supported as of v1.19.4+k3s1. Experimental as of v1.17.4+k3s1.")),(0,i.kt)("p",null,"If you are installing K3s on a system where SELinux is enabled by default (such as CentOS), you must ensure the proper SELinux policies have been installed. "),(0,i.kt)("h4",{id:"automatic-installation"},"Automatic Installation"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Available as of v1.19.3+k3s2")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"installation/install-options#options-for-installation-with-script"},"install script")," will automatically install the SELinux RPM from the Rancher RPM repository if on a compatible system if not performing an air-gapped install. Automatic installation can be skipped by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"INSTALL_K3S_SKIP_SELINUX_RPM=true"),"."),(0,i.kt)("h4",{id:"manual-installation"},"Manual Installation"),(0,i.kt)("p",null,"The necessary policies can be installed with the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yum install -y container-selinux selinux-policy-base\nyum install -y https://rpm.rancher.io/k3s/latest/common/centos/7/noarch/k3s-selinux-0.2-1.el7_8.noarch.rpm\n")),(0,i.kt)("p",null,"To force the install script to log a warning rather than fail, you can set the following environment variable: ",(0,i.kt)("inlineCode",{parentName:"p"},"INSTALL_K3S_SELINUX_WARN=true"),"."),(0,i.kt)("h4",{id:"enabling-and-disabling-selinux-enforcement"},"Enabling and Disabling SELinux Enforcement"),(0,i.kt)("p",null,"The way that SELinux enforcement is enabled or disabled depends on the K3s version."),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"K3s v1.19.1+k3s1",label:"K3s v1.19.1+k3s1",default:!0,mdxType:"TabItem"},"To leverage SELinux, specify the `--selinux` flag when starting K3s servers and agents. This option can also be specified in the K3s [configuration file](#).",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"selinux: true\n")),(0,i.kt)("p",null,"  The ",(0,i.kt)("inlineCode",{parentName:"p"},"--disable-selinux")," option should not be used. It is deprecated and will be either ignored or will be unrecognized, resulting in an error, in future minor releases."),(0,i.kt)("p",null,"  Using a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"--data-dir")," under SELinux is not supported. To customize it, you would most likely need to write your own custom policy. For guidance, you could refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/containers/container-selinux"},"containers/container-selinux")," repository, which contains the SELinux policy files for Container Runtimes, and the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rancher/k3s-selinux"},"rancher/k3s-selinux")," repository, which contains the SELinux policy for K3s.")),(0,i.kt)(l.Z,{value:"K3s before v1.19.1+k3s1",label:"K3s before v1.19.1+k3s1",mdxType:"TabItem"},(0,i.kt)("p",null,"  SELinux is automatically enabled for the built-in containerd."),(0,i.kt)("p",null,"  To turn off SELinux enforcement in the embedded containerd, launch K3s with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--disable-selinux")," flag."),(0,i.kt)("p",null,"  Using a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"--data-dir")," under SELinux is not supported. To customize it, you would most likely need to write your own custom policy. For guidance, you could refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/containers/container-selinux"},"containers/container-selinux")," repository, which contains the SELinux policy files for Container Runtimes, and the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rancher/k3s-selinux"},"rancher/k3s-selinux")," repository, which contains the SELinux policy for K3s ."))),(0,i.kt)("h3",{id:"enabling-lazy-pulling-of-estargz-experimental"},"Enabling Lazy Pulling of eStargz (Experimental)"),(0,i.kt)("h4",{id:"whats-lazy-pulling-and-estargz"},"What's lazy pulling and eStargz?"),(0,i.kt)("p",null,"Pulling images is known as one of the time-consuming steps in the container lifecycle.\nAccording to ",(0,i.kt)("a",{parentName:"p",href:"https://www.usenix.org/conference/fast16/technical-sessions/presentation/harter"},"Harter, et al."),","),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pulling packages accounts for 76% of container start time, but only 6.4% of that data is read")),(0,i.kt)("p",null,"To address this issue, k3s experimentally supports ",(0,i.kt)("em",{parentName:"p"},"lazy pulling")," of image contents.\nThis allows k3s to start a container before the entire image has been pulled.\nInstead, the necessary chunks of contents (e.g. individual files) are fetched on-demand.\nEspecially for large images, this technique can shorten the container startup latency."),(0,i.kt)("p",null,"To enable lazy pulling, the target image needs to be formatted as ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/containerd/stargz-snapshotter/blob/main/docs/stargz-estargz.md"},(0,i.kt)("em",{parentName:"a"},"eStargz")),".\nThis is an OCI-alternative but 100% OCI-compatible image format for lazy pulling.\nBecause of the compatibility, eStargz can be pushed to standard container registries (e.g. ghcr.io) as well as this is ",(0,i.kt)("em",{parentName:"p"},"still runnable")," even on eStargz-agnostic runtimes."),(0,i.kt)("p",null,"eStargz is developed based on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/google/crfs"},"stargz format proposed by Google CRFS project")," but comes with practical features including content verification and performance optimization.\nFor more details about lazy pulling and eStargz, please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/containerd/stargz-snapshotter"},"Stargz Snapshotter project repository"),"."),(0,i.kt)("h4",{id:"configure-k3s-for-lazy-pulling-of-estargz"},"Configure k3s for lazy pulling of eStargz"),(0,i.kt)("p",null,"As shown in the following, ",(0,i.kt)("inlineCode",{parentName:"p"},"--snapshotter=stargz")," option is needed for k3s server and agent."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"k3s server --snapshotter=stargz\n")),(0,i.kt)("p",null,"With this configuration, you can perform lazy pulling for eStargz-formatted images.\nThe following Pod manifest uses eStargz-formatted ",(0,i.kt)("inlineCode",{parentName:"p"},"node:13.13.0")," image (",(0,i.kt)("inlineCode",{parentName:"p"},"ghcr.io/stargz-containers/node:13.13.0-esgz"),").\nk3s performs lazy pulling for this image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nodejs\nspec:\n  containers:\n  - name: nodejs-estargz\n    image: ghcr.io/stargz-containers/node:13.13.0-esgz\n    command: [\"node\"]\n    args:\n    - -e\n    - var http = require('http');\n      http.createServer(function(req, res) {\n        res.writeHead(200);\n        res.end('Hello World!\\n');\n      }).listen(80);\n    ports:\n    - containerPort: 80\n")),(0,i.kt)("h3",{id:"additional-logging-sources"},"Additional Logging Sources"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#"},"Rancher logging")," for K3s can be installed without using Rancher. The following instructions should be executed to do so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"helm repo add rancher-charts https://charts.rancher.io\nhelm repo update\nhelm install --create-namespace -n cattle-logging-system rancher-logging-crd rancher-charts/rancher-logging-crd\nhelm install --create-namespace -n cattle-logging-system rancher-logging --set additionalLoggingSources.k3s.enabled=true rancher-charts/rancher-logging\n")),(0,i.kt)("h3",{id:"server-and-agent-tokens"},"Server and agent tokens"),(0,i.kt)("p",null,"In K3s, there are two types of tokens: K3S_TOKEN and K3S_AGENT_TOKEN."),(0,i.kt)("p",null,"K3S_TOKEN: Defines the key required by the server to offer the HTTP config resources. These resources are requested by the other servers before joining the K3s HA cluster. If the K3S_AGENT_TOKEN is not defined, the agents use this token as well to access the required HTTP resources to join the cluster. Note that this token is also used to generate the encryption key for important content in the database (e.g., bootstrap data)."),(0,i.kt)("p",null,"K3S_AGENT_TOKEN: Optional. Defines the key required by the server to offer HTTP config resources to the agents. If not defined, agents will require K3S_TOKEN. Defining K3S_AGENT_TOKEN is encouraged to avoid agents having to know K3S_TOKEN, which is also used to encrypt data."),(0,i.kt)("p",null,"If no K3S_TOKEN is defined, the first K3s server will generate a random one. The result is part of the content in ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/server/token"),". For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"K1070878408e06a827960208f84ed18b65fa10f27864e71a57d9e053c4caff8504b::server:df54383b5659b9280aa1e73e60ef78fc"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"df54383b5659b9280aa1e73e60ef78fc")," is the K3S_TOKEN."))}h.isMDXComponent=!0}}]);